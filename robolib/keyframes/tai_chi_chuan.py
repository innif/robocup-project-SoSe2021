

def tai_chi_chuan():
    # Choregraphe bezier export in Python.
    names = list()
    times = list()
    keys = list()

    names.append("HeadPitch")
    times.append([3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23.6, 26.2, 28.4, 30.4, 32.4, 34.4, 37, 39.6, 42.2, 44.4, 46.2, 50])
    keys.append([[0, [3, -1, 0], [3, 0.666667, 0]], [8.95233e-08, [3, -0.666667, 0], [3, 0.666667, 0]], [-4.76838e-07, [3, -0.666667, 0], [3, 0.666667, 0]], [8.89455e-08, [3, -0.666667, -1.60302e-08], [3, 0.666667, 1.60302e-08]], [1.04976e-07, [3, -0.666667, -1.60302e-08], [3, 0.666667, 1.60302e-08]], [0.331613, [3, -0.666667, 0], [3, 0.666667, 0]], [0.314159, [3, -0.666667, 0.0174533], [3, 0.666667, -0.0174533]], [9.19019e-08, [3, -0.666667, 0.107629], [3, 0.666667, -0.107629]], [-0.331613, [3, -0.666667, 0], [3, 0.666667, 0]], [0.139626, [3, -0.666667, 0], [3, 0.866667, 0]], [-0.0872665, [3, -0.866667, 0], [3, 0.866667, 0]], [0.139626, [3, -0.866667, -0.0850848], [3, 0.733333, 0.0719948]], [0.383972, [3, -0.733333, -0.0731376], [3, 0.666667, 0.0664887]], [0.558505, [3, -0.666667, 0], [3, 0.666667, 0]], [0.383972, [3, -0.666667, 0.148353], [3, 0.666667, -0.148353]], [-0.331613, [3, -0.666667, 0], [3, 0.866667, 0]], [0.139626, [3, -0.866667, 0], [3, 0.866667, 0]], [-0.0872665, [3, -0.866667, 0], [3, 0.866667, 0]], [0.139626, [3, -0.866667, -0.0850848], [3, 0.733333, 0.0719948]], [0.383972, [3, -0.733333, 0], [3, 0.6, 0]], [0, [3, -0.6, 0.0615247], [3, 1.26667, -0.129886]], [-0.190258, [3, -1.26667, 0], [3, 0, 0]]])

    names.append("HeadYaw")
    times.append([3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23.6, 26.2, 28.4, 30.4, 32.4, 34.4, 37, 39.6, 42.2, 44.4, 46.2, 50])
    keys.append([[0, [3, -1, 0], [3, 0.666667, 0]], [8.42936e-08, [3, -0.666667, -1.7461e-13], [3, 0.666667, 1.7461e-13]], [8.42938e-08, [3, -0.666667, 0], [3, 0.666667, 0]], [8.42938e-08, [3, -0.666667, 0], [3, 0.666667, 0]], [-4.76838e-07, [3, -0.666667, 0], [3, 0.666667, 0]], [0.314159, [3, -0.666667, 0], [3, 0.666667, 0]], [-0.296706, [3, -0.666667, 0.250164], [3, 0.666667, -0.250164]], [-1.18682, [3, -0.666667, 0], [3, 0.666667, 0]], [-0.279253, [3, -0.666667, -0.232711], [3, 0.666667, 0.232711]], [0.20944, [3, -0.666667, -0.268123], [3, 0.866667, 0.34856]], [1.5708, [3, -0.866667, 0], [3, 0.866667, 0]], [0.20944, [3, -0.866667, 0.0825065], [3, 0.733333, -0.0698132]], [0.139626, [3, -0.733333, 0.0365688], [3, 0.666667, -0.0332444]], [0, [3, -0.666667, 0.0465421], [3, 0.666667, -0.0465421]], [-0.139626, [3, -0.666667, 0], [3, 0.666667, 0]], [0.279253, [3, -0.666667, 0], [3, 0.866667, 0]], [-0.20944, [3, -0.866667, 0.308341], [3, 0.866667, -0.308341]], [-1.5708, [3, -0.866667, 0], [3, 0.866667, 0]], [-0.20944, [3, -0.866667, -0.0825065], [3, 0.733333, 0.0698132]], [-0.139626, [3, -0.733333, -0.0383972], [3, 0.6, 0.0314159]], [0, [3, -0.6, 0], [3, 1.26667, 0]], [-0.00310993, [3, -1.26667, 0], [3, 0, 0]]])

    names.append("LAnklePitch")
    times.append([3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23.6, 26.2, 28.4, 30.4, 32.4, 34.4, 37, 39.6, 42.2, 43.4, 44.4, 46.2, 50])
    keys.append([[1.00403e-07, [3, -1, 0], [3, 0.666667, 0]], [0, [3, -0.666667, 1.00403e-07], [3, 0.666667, -1.00403e-07]], [-0.303687, [3, -0.666667, 0], [3, 0.666667, 0]], [0, [3, -0.666667, 0], [3, 0.666667, 0]], [0, [3, -0.666667, 0], [3, 0.666667, 0]], [-0.647517, [3, -0.666667, 0], [3, 0.666667, 0]], [-0.610865, [3, -0.666667, 0], [3, 0.666667, 0]], [-1.0472, [3, -0.666667, 0], [3, 0.666667, 0]], [-1.0472, [3, -0.666667, 0], [3, 0.666667, 0]], [-1.0472, [3, -0.666667, 0], [3, 0.866667, 0]], [-1.0472, [3, -0.866667, 0], [3, 0.866667, 0]], [-1.0472, [3, -0.866667, 0], [3, 0.733333, 0]], [-1.0472, [3, -0.733333, 0], [3, 0.666667, 0]], [-0.872665, [3, -0.666667, -0.0509054], [3, 0.666667, 0.0509054]], [-0.741765, [3, -0.666667, -0.1309], [3, 0.666667, 0.1309]], [0, [3, -0.666667, -7.72328e-08], [3, 0.866667, 1.00403e-07]], [1.00403e-07, [3, -0.866667, -1.00403e-07], [3, 0.866667, 1.00403e-07]], [0.523599, [3, -0.866667, 0], [3, 0.866667, 0]], [1.00403e-07, [3, -0.866667, 0.246], [3, 0.4, -0.113538]], [-0.555015, [3, -0.4, 0.119], [3, 0.333333, -0.0991665]], [-0.654498, [3, -0.333333, 0.0585932], [3, 0.6, -0.105468]], [-1.0472, [3, -0.6, 0], [3, 1.26667, 0]], [0.033706, [3, -1.26667, 0], [3, 0, 0]]])

    names.append("LAnkleRoll")
    times.append([3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23.6, 26.2, 28.4, 30.4, 32.4, 33.4, 34.4, 37, 39.6, 42.2, 44.4, 46.2, 50])
    keys.append([[0.0523599, [3, -1, 0], [3, 0.666667, 0]], [0.122173, [3, -0.666667, -0.0203622], [3, 0.666667, 0.0203622]], [0.174533, [3, -0.666667, 0], [3, 0.666667, 0]], [-0.10472, [3, -0.666667, 0], [3, 0.666667, 0]], [-0.10472, [3, -0.666667, 0], [3, 0.666667, 0]], [0.174533, [3, -0.666667, 0], [3, 0.666667, 0]], [-0.261799, [3, -0.666667, 0], [3, 0.666667, 0]], [0.0628318, [3, -0.666667, -0.0654498], [3, 0.666667, 0.0654498]], [0.1309, [3, -0.666667, 0], [3, 0.666667, 0]], [0, [3, -0.666667, 0], [3, 0.866667, 0]], [0, [3, -0.866667, 0], [3, 0.866667, 0]], [0, [3, -0.866667, 0], [3, 0.733333, 0]], [0.0872665, [3, -0.733333, 0], [3, 0.666667, 0]], [0, [3, -0.666667, 0.054687], [3, 0.666667, -0.054687]], [-0.240855, [3, -0.666667, 0.123724], [3, 0.333333, -0.0618622]], [-0.55676, [3, -0.333333, 0], [3, 0.333333, 0]], [-0.424115, [3, -0.333333, -0.0192309], [3, 0.866667, 0.0500005]], [-0.349066, [3, -0.866667, -0.0706858], [3, 0.866667, 0.0706858]], [0, [3, -0.866667, 0], [3, 0.866667, 0]], [-0.349066, [3, -0.866667, 0], [3, 0.733333, 0]], [-0.312414, [3, -0.733333, -0.0366519], [3, 0.6, 0.0299879]], [0, [3, -0.6, 0], [3, 1.26667, 0]], [-0.05058, [3, -1.26667, 0], [3, 0, 0]]])

    names.append("LElbowRoll")
    times.append([3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23.6, 26.2, 28.4, 30.4, 32.4, 34.4, 37, 39.6, 42.2, 44.4, 45.4, 46.2, 50])
    keys.append([[0, [3, -1, 0], [3, 0.666667, 0]], [-0.698132, [3, -0.666667, 0.174533], [3, 0.666667, -0.174533]], [-1.0472, [3, -0.666667, 0], [3, 0.666667, 0]], [0, [3, -0.666667, 0], [3, 0.666667, 0]], [0, [3, -0.666667, 0], [3, 0.666667, 0]], [-1.65806, [3, -0.666667, 0], [3, 0.666667, 0]], [-0.959931, [3, -0.666667, 0], [3, 0.666667, 0]], [-1.48353, [3, -0.666667, 0], [3, 0.666667, 0]], [-1.01229, [3, -0.666667, 0], [3, 0.666667, 0]], [-1.01229, [3, -0.666667, 0], [3, 0.866667, 0]], [0, [3, -0.866667, 0], [3, 0.866667, 0]], [-1.01229, [3, -0.866667, 0], [3, 0.733333, 0]], [-1.01229, [3, -0.733333, 0], [3, 0.666667, 0]], [-0.890118, [3, -0.666667, -0.0261799], [3, 0.666667, 0.0261799]], [-0.855211, [3, -0.666667, 0], [3, 0.666667, 0]], [-1.11701, [3, -0.666667, 0], [3, 0.866667, 0]], [-0.855211, [3, -0.866667, 0], [3, 0.866667, 0]], [-1.25664, [3, -0.866667, 0], [3, 0.866667, 0]], [-0.855211, [3, -0.866667, 0], [3, 0.733333, 0]], [-0.855211, [3, -0.733333, 0], [3, 0.333333, 0]], [-0.994838, [3, -0.333333, 0.10472], [3, 0.266667, -0.0837758]], [-1.4207, [3, -0.266667, 0], [3, 1.26667, 0]], [-0.38806, [3, -1.26667, 0], [3, 0, 0]]])

    names.append("LElbowYaw")
    times.append([3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23.6, 26.2, 28.4, 30.4, 32.4, 34.4, 37, 39.6, 42.2, 44.4, 45.4, 46.2, 50])
    keys.append([[-1.5708, [3, -1, 0], [3, 0.666667, 0]], [-1.5708, [3, -0.666667, 0], [3, 0.666667, 0]], [-1.5708, [3, -0.666667, 0], [3, 0.666667, 0]], [-1.5708, [3, -0.666667, 0], [3, 0.666667, 0]], [-1.5708, [3, -0.666667, 0], [3, 0.666667, 0]], [-0.383972, [3, -0.666667, -0.261799], [3, 0.666667, 0.261799]], [0, [3, -0.666667, 0], [3, 0.666667, 0]], [0, [3, -0.666667, 0], [3, 0.666667, 0]], [0, [3, -0.666667, 0], [3, 0.666667, 0]], [0, [3, -0.666667, 0], [3, 0.866667, 0]], [0, [3, -0.866667, 0], [3, 0.866667, 0]], [0, [3, -0.866667, 0], [3, 0.733333, 0]], [0, [3, -0.733333, 0], [3, 0.666667, 0]], [0.20944, [3, -0.666667, 0], [3, 0.666667, 0]], [0.191986, [3, -0.666667, 0.0174533], [3, 0.666667, -0.0174533]], [-0.418879, [3, -0.666667, 0], [3, 0.866667, 0]], [-0.418879, [3, -0.866667, 0], [3, 0.866667, 0]], [-0.0872665, [3, -0.866667, 0], [3, 0.866667, 0]], [-0.418879, [3, -0.866667, 0], [3, 0.733333, 0]], [0.191986, [3, -0.733333, 0], [3, 0.333333, 0]], [-0.378736, [3, -0.333333, 0], [3, 0.266667, 0]], [-0.244346, [3, -0.266667, 0], [3, 1.26667, 0]], [-1.18276, [3, -1.26667, 0], [3, 0, 0]]])

    names.append("LHand")
    times.append([3, 50])
    keys.append([[0, [3, -1, 0], [3, 15.6667, 0]], [0.2984, [3, -15.6667, 0], [3, 0, 0]]])

    names.append("LHipPitch")
    times.append([3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23.6, 26.2, 28.4, 30.4, 32.4, 34.4, 37, 39.6, 42.2, 44.4, 46.2, 50])
    keys.append([[0, [3, -1, 0], [3, 0.666667, 0]], [0, [3, -0.666667, 0], [3, 0.666667, 0]], [-0.349066, [3, -0.666667, 0], [3, 0.666667, 0]], [0, [3, -0.666667, 0], [3, 0.666667, 0]], [0, [3, -0.666667, 0], [3, 0.666667, 0]], [-0.698132, [3, -0.666667, 0], [3, 0.666667, 0]], [-0.610865, [3, -0.666667, 0], [3, 0.666667, 0]], [-1.0472, [3, -0.666667, 0], [3, 0.666667, 0]], [-1.0472, [3, -0.666667, 0], [3, 0.666667, 0]], [-1.0472, [3, -0.666667, 0], [3, 0.866667, 0]], [-1.0472, [3, -0.866667, 0], [3, 0.866667, 0]], [-1.0472, [3, -0.866667, 0], [3, 0.733333, 0]], [-1.0472, [3, -0.733333, 0], [3, 0.666667, 0]], [-0.872665, [3, -0.666667, -0.0509054], [3, 0.666667, 0.0509054]], [-0.741765, [3, -0.666667, -0.125082], [3, 0.666667, 0.125082]], [-0.122173, [3, -0.666667, 0], [3, 0.866667, 0]], [-0.872665, [3, -0.866667, 0], [3, 0.866667, 0]], [0, [3, -0.866667, 0], [3, 0.866667, 0]], [-0.872665, [3, -0.866667, 0], [3, 0.733333, 0]], [-0.654498, [3, -0.733333, 0], [3, 0.6, 0]], [-1.0472, [3, -0.6, 0], [3, 1.26667, 0]], [0.216335, [3, -1.26667, 0], [3, 0, 0]]])

    names.append("LHipRoll")
    times.append([3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23.6, 26.2, 28.4, 30.4, 32.4, 33.4, 34.4, 37, 39.6, 42.2, 44.4, 46.2, 50])
    keys.append([[-0.0523599, [3, -1, 0], [3, 0.666667, 0]], [-0.122173, [3, -0.666667, 0.0203622], [3, 0.666667, -0.0203622]], [-0.174533, [3, -0.666667, 0], [3, 0.666667, 0]], [0.10472, [3, -0.666667, 0], [3, 0.666667, 0]], [0.10472, [3, -0.666667, 0], [3, 0.666667, 0]], [-0.174533, [3, -0.666667, 0], [3, 0.666667, 0]], [0.174533, [3, -0.666667, -0.0991929], [3, 0.666667, 0.0991929]], [0.420624, [3, -0.666667, -0.0590503], [3, 0.666667, 0.0590503]], [0.528835, [3, -0.666667, -0.0317068], [3, 0.666667, 0.0317068]], [0.610865, [3, -0.666667, 0], [3, 0.866667, 0]], [0.610865, [3, -0.866667, 0], [3, 0.866667, 0]], [0.610865, [3, -0.866667, 0], [3, 0.733333, 0]], [0.349066, [3, -0.733333, 0.106659], [3, 0.666667, -0.0969627]], [0, [3, -0.666667, 0.101811], [3, 0.666667, -0.101811]], [-0.261799, [3, -0.666667, 0], [3, 0.333333, 0]], [0.251327, [3, -0.333333, -0.010472], [3, 0.333333, 0.010472]], [0.261799, [3, -0.333333, 0], [3, 0.866667, 0]], [0.139626, [3, -0.866667, 0], [3, 0.866667, 0]], [0.698132, [3, -0.866667, 0], [3, 0.866667, 0]], [0.139626, [3, -0.866667, 0.173321], [3, 0.733333, -0.146656]], [-0.261799, [3, -0.733333, 0], [3, 0.6, 0]], [0, [3, -0.6, -0.019639], [3, 1.26667, 0.0414601]], [0.0414601, [3, -1.26667, 0], [3, 0, 0]]])

    names.append("LHipYawPitch")
    times.append([3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23.6, 26.2, 28.4, 30.4, 32.4, 34.4, 37, 39.6, 42.2, 44.4, 46.2, 50])
    keys.append([[-0.10821, [3, -1, 0], [3, 0.666667, 0]], [-0.120428, [3, -0.666667, 0.00378155], [3, 0.666667, -0.00378155]], [-0.1309, [3, -0.666667, 0], [3, 0.666667, 0]], [-0.120428, [3, -0.666667, 0], [3, 0.666667, 0]], [-0.143117, [3, -0.666667, 0.00785398], [3, 0.666667, -0.00785398]], [-0.167552, [3, -0.666667, 0], [3, 0.666667, 0]], [-0.0994838, [3, -0.666667, -0.0279253], [3, 0.666667, 0.0279253]], [0, [3, -0.666667, 0], [3, 0.666667, 0]], [0, [3, -0.666667, 0], [3, 0.666667, 0]], [0, [3, -0.666667, 0], [3, 0.866667, 0]], [0, [3, -0.866667, 0], [3, 0.866667, 0]], [0, [3, -0.866667, 0], [3, 0.733333, 0]], [0, [3, -0.733333, 0], [3, 0.666667, 0]], [0, [3, -0.666667, 0], [3, 0.666667, 0]], [0, [3, -0.666667, 0], [3, 0.666667, 0]], [0, [3, -0.666667, 0], [3, 0.866667, 0]], [0, [3, -0.866667, 0], [3, 0.866667, 0]], [0, [3, -0.866667, 0], [3, 0.866667, 0]], [0, [3, -0.866667, 0], [3, 0.733333, 0]], [-0.0680678, [3, -0.733333, 0], [3, 0.6, 0]], [0, [3, -0.6, 0], [3, 1.26667, 0]], [-0.194775, [3, -1.26667, 0], [3, 0, 0]]])

    names.append("LKneePitch")
    times.append([3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23.6, 26.2, 28.4, 30.4, 32.4, 34.4, 37, 39.6, 42.2, 44.4, 46.2, 50])
    keys.append([[0, [3, -1, 0], [3, 0.666667, 0]], [0, [3, -0.666667, 0], [3, 0.666667, 0]], [0.698132, [3, -0.666667, 0], [3, 0.666667, 0]], [-9.9341e-08, [3, -0.666667, 0], [3, 0.666667, 0]], [-9.9341e-08, [3, -0.666667, 0], [3, 0.666667, 0]], [1.39626, [3, -0.666667, 0], [3, 0.666667, 0]], [1.22173, [3, -0.666667, 0], [3, 0.666667, 0]], [2.0944, [3, -0.666667, 0], [3, 0.666667, 0]], [2.0944, [3, -0.666667, 0], [3, 0.666667, 0]], [2.0944, [3, -0.666667, 0], [3, 0.866667, 0]], [2.0944, [3, -0.866667, 0], [3, 0.866667, 0]], [2.0944, [3, -0.866667, 0], [3, 0.733333, 0]], [2.1101, [3, -0.733333, 0], [3, 0.666667, 0]], [1.74533, [3, -0.666667, 0.104429], [3, 0.666667, -0.104429]], [1.48353, [3, -0.666667, 0.261799], [3, 0.666667, -0.261799]], [0.122173, [3, -0.666667, 0], [3, 0.866667, 0]], [1.74533, [3, -0.866667, 0], [3, 0.866667, 0]], [0, [3, -0.866667, 0], [3, 0.866667, 0]], [1.74533, [3, -0.866667, 0], [3, 0.733333, 0]], [1.309, [3, -0.733333, 0], [3, 0.6, 0]], [2.0944, [3, -0.6, 0], [3, 1.26667, 0]], [-0.0890141, [3, -1.26667, 0], [3, 0, 0]]])

    names.append("LShoulderPitch")
    times.append([3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23.6, 26.2, 28.4, 30.4, 32.4, 34.4, 37, 39.6, 42.2, 44.4, 46.2, 50])
    keys.append([[1.5708, [3, -1, 0], [3, 0.666667, 0]], [1.91986, [3, -0.666667, -0.0872665], [3, 0.666667, 0.0872665]], [2.0944, [3, -0.666667, 0], [3, 0.666667, 0]], [1.5708, [3, -0.666667, 0.349066], [3, 0.666667, -0.349066]], [0, [3, -0.666667, 0], [3, 0.666667, 0]], [0.366519, [3, -0.666667, 0], [3, 0.666667, 0]], [0.349066, [3, -0.666667, 0.0174533], [3, 0.666667, -0.0174533]], [0.191986, [3, -0.666667, 0.15708], [3, 0.666667, -0.15708]], [-0.802851, [3, -0.666667, 0], [3, 0.666667, 0]], [-0.174533, [3, -0.666667, 0], [3, 0.866667, 0]], [-0.296706, [3, -0.866667, 0], [3, 0.866667, 0]], [-0.174533, [3, -0.866667, -0.122173], [3, 0.733333, 0.103377]], [0.523599, [3, -0.733333, 0], [3, 0.666667, 0]], [0.471239, [3, -0.666667, 0.0319977], [3, 0.666667, -0.0319977]], [0.331613, [3, -0.666667, 0.139626], [3, 0.666667, -0.139626]], [-0.471239, [3, -0.666667, 0], [3, 0.866667, 0]], [0.0698132, [3, -0.866667, 0], [3, 0.866667, 0]], [-0.0698132, [3, -0.866667, 0], [3, 0.866667, 0]], [0.0698132, [3, -0.866667, -0.0724796], [3, 0.733333, 0.0613289]], [0.331613, [3, -0.733333, -0.261799], [3, 0.6, 0.214199]], [1.69297, [3, -0.6, 0], [3, 1.26667, 0]], [1.52936, [3, -1.26667, 0], [3, 0, 0]]])

    names.append("LShoulderRoll")
    times.append([3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23.6, 26.2, 28.4, 30.4, 32.4, 34.4, 37, 39.6, 42.2, 44.4, 46.2, 50])
    keys.append([[0.174533, [3, -1, 0], [3, 0.666667, 0]], [0.349066, [3, -0.666667, 0], [3, 0.666667, 0]], [0.174533, [3, -0.666667, 0], [3, 0.666667, 0]], [0.174533, [3, -0.666667, 0], [3, 0.666667, 0]], [0.174533, [3, -0.666667, 0], [3, 0.666667, 0]], [0.698132, [3, -0.666667, 0], [3, 0.666667, 0]], [0, [3, -0.666667, 0], [3, 0.666667, 0]], [0.0872665, [3, -0.666667, -0.0290888], [3, 0.666667, 0.0290888]], [0.174533, [3, -0.666667, -0.0523599], [3, 0.666667, 0.0523599]], [0.401426, [3, -0.666667, -0.14165], [3, 0.866667, 0.184145]], [1.15192, [3, -0.866667, 0], [3, 0.866667, 0]], [0.401426, [3, -0.866667, 0], [3, 0.733333, 0]], [0.401426, [3, -0.733333, 0], [3, 0.666667, 0]], [0.174533, [3, -0.666667, 0.0669043], [3, 0.666667, -0.0669043]], [0, [3, -0.666667, 0], [3, 0.666667, 0]], [0.401426, [3, -0.666667, 0], [3, 0.866667, 0]], [0, [3, -0.866667, 0], [3, 0.866667, 0]], [0, [3, -0.866667, 0], [3, 0.866667, 0]], [0, [3, -0.866667, 0], [3, 0.733333, 0]], [0.20944, [3, -0.733333, -0.172788], [3, 0.6, 0.141372]], [0.942478, [3, -0.6, 0], [3, 1.26667, 0]], [0.107338, [3, -1.26667, 0], [3, 0, 0]]])

    names.append("LWristYaw")
    times.append([3, 50])
    keys.append([[-1.53589, [3, -1, 0], [3, 15.6667, 0]], [0.139552, [3, -15.6667, 0], [3, 0, 0]]])

    names.append("RAnklePitch")
    times.append([3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23.6, 26.2, 28.4, 30.4, 32.4, 34.4, 37, 39.6, 42.2, 44.4, 46.2, 50])
    keys.append([[1.00403e-07, [3, -1, 0], [3, 0.666667, 0]], [0, [3, -0.666667, 0], [3, 0.666667, 0]], [0, [3, -0.666667, 0], [3, 0.666667, 0]], [0, [3, -0.666667, 0], [3, 0.666667, 0]], [0, [3, -0.666667, 0], [3, 0.666667, 0]], [-0.698132, [3, -0.666667, 0], [3, 0.666667, 0]], [-0.174533, [3, -0.666667, -0.116355], [3, 0.666667, 0.116355]], [0, [3, -0.666667, 0], [3, 0.666667, 0]], [0, [3, -0.666667, 0], [3, 0.666667, 0]], [1.00403e-07, [3, -0.666667, -1.00403e-07], [3, 0.866667, 1.30524e-07]], [0.523599, [3, -0.866667, 0], [3, 0.866667, 0]], [1.00403e-07, [3, -0.866667, 0.228468], [3, 0.733333, -0.193319]], [-0.741765, [3, -0.733333, 0.14399], [3, 0.666667, -0.1309]], [-0.872665, [3, -0.666667, 0.0509054], [3, 0.666667, -0.0509054]], [-1.0472, [3, -0.666667, 0], [3, 0.666667, 0]], [-1.0472, [3, -0.666667, 0], [3, 0.866667, 0]], [-1.0472, [3, -0.866667, 0], [3, 0.866667, 0]], [-1.0472, [3, -0.866667, 0], [3, 0.866667, 0]], [-1.0472, [3, -0.866667, 0], [3, 0.733333, 0]], [-1.0472, [3, -0.733333, 0], [3, 0.6, 0]], [-1.0472, [3, -0.6, 0], [3, 1.26667, 0]], [0.036858, [3, -1.26667, 0], [3, 0, 0]]])

    names.append("RAnkleRoll")
    times.append([3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23.6, 26.2, 28.4, 30.4, 32.4, 34.4, 37, 39.6, 42.2, 44.4, 46.2, 50])
    keys.append([[-0.0523599, [3, -1, 0], [3, 0.666667, 0]], [0.1309, [3, -0.666667, -0.0817396], [3, 0.666667, 0.0817396]], [0.438078, [3, -0.666667, 0], [3, 0.666667, 0]], [0.10472, [3, -0.666667, 0], [3, 0.666667, 0]], [0.10472, [3, -0.666667, 0], [3, 0.666667, 0]], [0.294961, [3, -0.666667, -0.0861029], [3, 0.666667, 0.0861029]], [0.621337, [3, -0.666667, -0.0817396], [3, 0.666667, 0.0817396]], [0.785398, [3, -0.666667, 0], [3, 0.666667, 0]], [0.74351, [3, -0.666667, 0.0418879], [3, 0.666667, -0.0418879]], [0.436332, [3, -0.666667, 0.107755], [3, 0.866667, -0.140082]], [0, [3, -0.866667, 0], [3, 0.866667, 0]], [0.349066, [3, -0.866667, 0], [3, 0.733333, 0]], [0.261799, [3, -0.733333, 0.060948], [3, 0.666667, -0.0554073]], [0, [3, -0.666667, 0.0727221], [3, 0.666667, -0.0727221]], [-0.174533, [3, -0.666667, 0], [3, 0.666667, 0]], [-0.174533, [3, -0.666667, 0], [3, 0.866667, 0]], [-0.0424667, [3, -0.866667, -0.0199111], [3, 0.866667, 0.0199111]], [-0.0225556, [3, -0.866667, -0.00490207], [3, 0.866667, 0.00490207]], [-0.0130542, [3, -0.866667, -0.00369954], [3, 0.733333, 0.00313038]], [-0.00206581, [3, -0.733333, -0.00239327], [3, 0.6, 0.00195813]], [0, [3, -0.6, -0.00206581], [3, 1.26667, 0.00436115]], [0.0291878, [3, -1.26667, 0], [3, 0, 0]]])

    names.append("RElbowRoll")
    times.append([3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23.6, 26.2, 28.4, 30.4, 32.4, 34.4, 37, 39.6, 42.2, 44.4, 45.4, 46.2, 50])
    keys.append([[0, [3, -1, 0], [3, 0.666667, 0]], [0.698132, [3, -0.666667, -0.174533], [3, 0.666667, 0.174533]], [1.0472, [3, -0.666667, 0], [3, 0.666667, 0]], [2.57424e-07, [3, -0.666667, 2.57424e-07], [3, 0.666667, -2.57424e-07]], [0, [3, -0.666667, 0], [3, 0.666667, 0]], [1.23918, [3, -0.666667, -0.273435], [3, 0.666667, 0.273435]], [1.64061, [3, -0.666667, 0], [3, 0.666667, 0]], [0.0698132, [3, -0.666667, 0], [3, 0.666667, 0]], [1.11701, [3, -0.666667, 0], [3, 0.666667, 0]], [0.855211, [3, -0.666667, 0], [3, 0.866667, 0]], [1.25664, [3, -0.866667, 0], [3, 0.866667, 0]], [0.855211, [3, -0.866667, 0], [3, 0.733333, 0]], [0.855211, [3, -0.733333, 0], [3, 0.666667, 0]], [0.890118, [3, -0.666667, -0.0261799], [3, 0.666667, 0.0261799]], [1.01229, [3, -0.666667, 0], [3, 0.666667, 0]], [1.01229, [3, -0.666667, 0], [3, 0.866667, 0]], [1.01229, [3, -0.866667, 0], [3, 0.866667, 0]], [0.0349066, [3, -0.866667, 0], [3, 0.866667, 0]], [1.01229, [3, -0.866667, 0], [3, 0.733333, 0]], [1.01229, [3, -0.733333, 0], [3, 0.333333, 0]], [1.13272, [3, -0.333333, -0.0656115], [3, 0.266667, 0.0524892]], [1.36659, [3, -0.266667, 0], [3, 1.26667, 0]], [0.395814, [3, -1.26667, 0], [3, 0, 0]]])

    names.append("RElbowYaw")
    times.append([3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23.6, 26.2, 28.4, 30.4, 32.4, 34.4, 37, 39.6, 42.2, 44.4, 45.4, 46.2, 50])
    keys.append([[1.5708, [3, -1, 0], [3, 0.666667, 0]], [1.5708, [3, -0.666667, 0], [3, 0.666667, 0]], [1.5708, [3, -0.666667, 0], [3, 0.666667, 0]], [1.5708, [3, -0.666667, 0], [3, 0.666667, 0]], [1.5708, [3, -0.666667, 0], [3, 0.666667, 0]], [0.191986, [3, -0.666667, 0], [3, 0.666667, 0]], [0.349066, [3, -0.666667, -0.15708], [3, 0.666667, 0.15708]], [1.5708, [3, -0.666667, 0], [3, 0.666667, 0]], [0.418879, [3, -0.666667, 0], [3, 0.666667, 0]], [0.418879, [3, -0.666667, 0], [3, 0.866667, 0]], [0.0872665, [3, -0.866667, 0], [3, 0.866667, 0]], [0.418879, [3, -0.866667, 0], [3, 0.733333, 0]], [-0.191986, [3, -0.733333, 0.0191986], [3, 0.666667, -0.0174533]], [-0.20944, [3, -0.666667, 0], [3, 0.666667, 0]], [0, [3, -0.666667, 0], [3, 0.666667, 0]], [0, [3, -0.666667, 0], [3, 0.866667, 0]], [0, [3, -0.866667, 0], [3, 0.866667, 0]], [0, [3, -0.866667, 0], [3, 0.866667, 0]], [0, [3, -0.866667, 0], [3, 0.733333, 0]], [0, [3, -0.733333, 0], [3, 0.333333, 0]], [0.342085, [3, -0.333333, 0], [3, 0.266667, 0]], [0.244346, [3, -0.266667, 0], [3, 1.26667, 0]], [1.15966, [3, -1.26667, 0], [3, 0, 0]]])

    names.append("RHand")
    times.append([3, 50])
    keys.append([[0, [3, -1, 0], [3, 15.6667, 0]], [0.302, [3, -15.6667, 0], [3, 0, 0]]])

    names.append("RHipPitch")
    times.append([3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23.6, 26.2, 28.4, 30.4, 32.4, 34.4, 37, 39.6, 42.2, 44.4, 46.2, 50])
    keys.append([[0, [3, -1, 0], [3, 0.666667, 0]], [0, [3, -0.666667, 0], [3, 0.666667, 0]], [0, [3, -0.666667, 0], [3, 0.666667, 0]], [0, [3, -0.666667, 0], [3, 0.666667, 0]], [0, [3, -0.666667, 0], [3, 0.666667, 0]], [-0.698132, [3, -0.666667, 0], [3, 0.666667, 0]], [-0.174533, [3, -0.666667, -0.0698132], [3, 0.666667, 0.0698132]], [-0.10472, [3, -0.666667, 0], [3, 0.666667, 0]], [-0.122173, [3, -0.666667, 0.0174533], [3, 0.666667, -0.0174533]], [-0.872665, [3, -0.666667, 0], [3, 0.866667, 0]], [0, [3, -0.866667, 0], [3, 0.866667, 0]], [-0.872665, [3, -0.866667, 0], [3, 0.733333, 0]], [-0.741765, [3, -0.733333, 0], [3, 0.666667, 0]], [-0.872665, [3, -0.666667, 0.0509054], [3, 0.666667, -0.0509054]], [-1.0472, [3, -0.666667, 0], [3, 0.666667, 0]], [-1.0472, [3, -0.666667, 0], [3, 0.866667, 0]], [-1.0472, [3, -0.866667, 0], [3, 0.866667, 0]], [-1.0472, [3, -0.866667, 0], [3, 0.866667, 0]], [-1.0472, [3, -0.866667, 0], [3, 0.733333, 0]], [-1.0472, [3, -0.733333, 0], [3, 0.6, 0]], [-1.0472, [3, -0.6, 0], [3, 1.26667, 0]], [0.214717, [3, -1.26667, 0], [3, 0, 0]]])

    names.append("RHipRoll")
    times.append([3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23.6, 26.2, 28.4, 30.4, 32.4, 34.4, 37, 39.6, 42.2, 44.4, 46.2, 50])
    keys.append([[0.0523599, [3, -1, 0], [3, 0.666667, 0]], [-0.122173, [3, -0.666667, 0.0817396], [3, 0.666667, -0.0817396]], [-0.438078, [3, -0.666667, 0], [3, 0.666667, 0]], [-0.10472, [3, -0.666667, 0], [3, 0.666667, 0]], [-0.10472, [3, -0.666667, 0], [3, 0.666667, 0]], [-0.349066, [3, -0.666667, 0.113446], [3, 0.666667, -0.113446]], [-0.785398, [3, -0.666667, 0], [3, 0.666667, 0]], [-0.541052, [3, -0.666667, -0.107629], [3, 0.666667, 0.107629]], [-0.139626, [3, -0.666667, 0], [3, 0.666667, 0]], [-0.139626, [3, -0.666667, 0], [3, 0.866667, 0]], [-0.698132, [3, -0.866667, 0], [3, 0.866667, 0]], [-0.139626, [3, -0.866667, -0.173321], [3, 0.733333, 0.146656]], [0.261799, [3, -0.733333, 0], [3, 0.666667, 0]], [0, [3, -0.666667, 0.101811], [3, 0.666667, -0.101811]], [-0.349066, [3, -0.666667, 0.0898845], [3, 0.666667, -0.0898845]], [-0.539307, [3, -0.666667, 0.0379419], [3, 0.866667, -0.0493245]], [-0.610865, [3, -0.866667, 0], [3, 0.866667, 0]], [-0.610865, [3, -0.866667, 0], [3, 0.866667, 0]], [-0.610865, [3, -0.866667, 0], [3, 0.733333, 0]], [-0.532325, [3, -0.733333, -0.0785398], [3, 0.6, 0.0642598]], [0, [3, -0.6, 0], [3, 1.26667, 0]], [-0.021434, [3, -1.26667, 0], [3, 0, 0]]])

    names.append("RHipYawPitch")
    times.append([3, 5, 7, 9, 11, 13, 50])
    keys.append([[-0.10821, [3, -1, 0], [3, 0.666667, 0]], [-0.120428, [3, -0.666667, 0.00378155], [3, 0.666667, -0.00378155]], [-0.1309, [3, -0.666667, 0], [3, 0.666667, 0]], [-0.120428, [3, -0.666667, 0], [3, 0.666667, 0]], [-0.143117, [3, -0.666667, 0.00785398], [3, 0.666667, -0.00785398]], [-0.167552, [3, -0.666667, 0.000883047], [3, 12.3333, -0.0163364]], [-0.194775, [3, -12.3333, 0], [3, 0, 0]]])

    names.append("RKneePitch")
    times.append([3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23.6, 26.2, 28.4, 30.4, 32.4, 34.4, 37, 39.6, 42.2, 44.4, 46.2, 50])
    keys.append([[0, [3, -1, 0], [3, 0.666667, 0]], [0, [3, -0.666667, 0], [3, 0.666667, 0]], [0, [3, -0.666667, 0], [3, 0.666667, 0]], [0, [3, -0.666667, 0], [3, 0.666667, 0]], [0, [3, -0.666667, 0], [3, 0.666667, 0]], [1.39626, [3, -0.666667, 0], [3, 0.666667, 0]], [0.349066, [3, -0.666667, 0.212348], [3, 0.666667, -0.212348]], [0.122173, [3, -0.666667, 0], [3, 0.666667, 0]], [0.122173, [3, -0.666667, 0], [3, 0.666667, 0]], [1.74533, [3, -0.666667, 0], [3, 0.866667, 0]], [0, [3, -0.866667, 0], [3, 0.866667, 0]], [1.74533, [3, -0.866667, 0], [3, 0.733333, 0]], [1.48353, [3, -0.733333, 0], [3, 0.666667, 0]], [1.74533, [3, -0.666667, -0.101811], [3, 0.666667, 0.101811]], [2.0944, [3, -0.666667, 0], [3, 0.666667, 0]], [2.0944, [3, -0.666667, 0], [3, 0.866667, 0]], [2.0944, [3, -0.866667, 0], [3, 0.866667, 0]], [2.0944, [3, -0.866667, 0], [3, 0.866667, 0]], [2.0944, [3, -0.866667, 0], [3, 0.733333, 0]], [2.0944, [3, -0.733333, 0], [3, 0.6, 0]], [2.0944, [3, -0.6, 0], [3, 1.26667, 0]], [-0.091998, [3, -1.26667, 0], [3, 0, 0]]])

    names.append("RShoulderPitch")
    times.append([3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23.6, 26.2, 28.4, 30.4, 32.4, 34.4, 37, 39.6, 42.2, 44.4, 46.2, 50])
    keys.append([[1.5708, [3, -1, 0], [3, 0.666667, 0]], [1.91986, [3, -0.666667, -0.0872665], [3, 0.666667, 0.0872665]], [2.0944, [3, -0.666667, 0], [3, 0.666667, 0]], [1.5708, [3, -0.666667, 0.349066], [3, 0.666667, -0.349066]], [0, [3, -0.666667, 0], [3, 0.666667, 0]], [0.174533, [3, -0.666667, -0.101811], [3, 0.666667, 0.101811]], [0.610865, [3, -0.666667, -0.145444], [3, 0.666667, 0.145444]], [1.0472, [3, -0.666667, 0], [3, 0.666667, 0]], [-0.471239, [3, -0.666667, 0], [3, 0.666667, 0]], [0.0698132, [3, -0.666667, 0], [3, 0.866667, 0]], [-0.0698132, [3, -0.866667, 0], [3, 0.866667, 0]], [0.0698132, [3, -0.866667, -0.0724796], [3, 0.733333, 0.0613289]], [0.331613, [3, -0.733333, -0.0700902], [3, 0.666667, 0.0637184]], [0.471239, [3, -0.666667, -0.0319977], [3, 0.666667, 0.0319977]], [0.523599, [3, -0.666667, 0], [3, 0.666667, 0]], [-0.802851, [3, -0.666667, 0], [3, 0.866667, 0]], [-0.174533, [3, -0.866667, 0], [3, 0.866667, 0]], [-0.296706, [3, -0.866667, 0], [3, 0.866667, 0]], [-0.174533, [3, -0.866667, -0.122173], [3, 0.733333, 0.103377]], [0.523599, [3, -0.733333, -0.342375], [3, 0.6, 0.280125]], [1.69297, [3, -0.6, 0], [3, 1.26667, 0]], [1.51563, [3, -1.26667, 0], [3, 0, 0]]])

    names.append("RShoulderRoll")
    times.append([3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23.6, 26.2, 28.4, 30.4, 32.4, 34.4, 37, 39.6, 42.2, 44.4, 46.2, 50])
    keys.append([[-0.174533, [3, -1, 0], [3, 0.666667, 0]], [-0.174533, [3, -0.666667, 0], [3, 0.666667, 0]], [-0.349066, [3, -0.666667, 0], [3, 0.666667, 0]], [-0.174533, [3, -0.666667, -1.81594e-05], [3, 0.666667, 1.81594e-05]], [-0.174515, [3, -0.666667, -1.81594e-05], [3, 0.666667, 1.81594e-05]], [-0.0698132, [3, -0.666667, 0], [3, 0.666667, 0]], [-0.837758, [3, -0.666667, 0.241437], [3, 0.666667, -0.241437]], [-1.51844, [3, -0.666667, 0], [3, 0.666667, 0]], [-0.401426, [3, -0.666667, -0.253073], [3, 0.666667, 0.253073]], [0, [3, -0.666667, 0], [3, 0.866667, 0]], [0, [3, -0.866667, 0], [3, 0.866667, 0]], [0, [3, -0.866667, 0], [3, 0.733333, 0]], [0, [3, -0.733333, 0], [3, 0.666667, 0]], [-0.174533, [3, -0.666667, 0.0669043], [3, 0.666667, -0.0669043]], [-0.401426, [3, -0.666667, 0], [3, 0.666667, 0]], [-0.174533, [3, -0.666667, 0], [3, 0.866667, 0]], [-0.401426, [3, -0.866667, 0.162897], [3, 0.866667, -0.162897]], [-1.15192, [3, -0.866667, 0], [3, 0.866667, 0]], [-0.401426, [3, -0.866667, 0], [3, 0.733333, 0]], [-0.558505, [3, -0.733333, 0.0991929], [3, 0.6, -0.0811578]], [-0.942478, [3, -0.6, 0], [3, 1.26667, 0]], [-0.099752, [3, -1.26667, 0], [3, 0, 0]]])

    names.append("RWristYaw")
    times.append([3, 50])
    keys.append([[1.53589, [3, -1, 0], [3, 15.6667, 0]], [0.164096, [3, -15.6667, 0], [3, 0, 0]]])

    return names, times, keys